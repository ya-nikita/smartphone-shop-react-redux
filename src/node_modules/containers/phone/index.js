import React, { Component } from 'react'
import { connect } from 'react-redux'
import * as R from 'ramda'
import { Link } from 'react-router-dom'
import {
    CarouselProvider,
    Slider,
    Slide,
    Image,
    Dot,
} from 'pure-react-carousel'
import 'pure-react-carousel/dist/react-carousel.es.css';

import {
    fetchPhoneById,
    addPhoneToBasket
} from 'actions'
import { getPhoneById } from 'selectors'
import icons from 'api/icons'

class Phone extends Component {
    componentDidMount() {
        this.props.fetchPhoneById(this.props.match.params.id)
    }

    renderFields() {
        const { phone } = this.props

        const columnField = R.compose(
            R.toPairs,
            R.pick([
                'cpu',
                'camera',
                'size',
                'weight',
                'display',
                'battery',
                'memory'
            ])
        )(phone)
        return columnField.map(([key, value], index) => (
            <div className='column' key={key}>
                <div className='ab-details-title'>
                    <p>
                        <img className='details-icon' src={icons[index]} alt='-' />
                        {key}
                    </p>
                </div>
                <div className='ab-details-info'>
                    {value}
                </div>
            </div>
        ))
    }

    renderContent() {
        const { phone } = this.props
        return (
            <div className='thumbnail'>
                <div className='row'>
                    <div className='col-md-6'>
                        <div className='phonePage-carousel-wrapper'>
                            <CarouselProvider
                                naturalSlideWidth={417.75}
                                naturalSlideHeight={417.75}
                                totalSlides={phone.images.length}
                            >
                                <Slider>
                                    {phone.images.map((image, index) => (
                                        <Slide index={index} key={index}>
                                            <Image src={image} />
                                        </Slide>
                                    ))}
                                </Slider>
                                <div className='preview-list'>
                                    <div>
                                        {phone.images.map((image, index) => (
                                            <Dot slide={index} className='preview-link' key={index}>
                                                <Image className='preview-img' src={image} />
                                            </Dot>
                                        ))}
                                    </div>
                                </div>
                            </CarouselProvider>
                        </div>
                    </div>
                    <div className='col-md-6'>
                        {this.renderFields()}
                    </div>
                </div>
                <div className='caption-full'>
                    <h4 className='pull-right'>${phone.price}</h4>
                    <h4>{phone.name}</h4>
                    <p>{phone.description}</p>
                </div>
            </div>
        )
    }

    renderSidebar() {
        const { phone } = this.props
        return (
            <div className='form-group-wrapper'>
                <div className='form-group'>
                    <h1>{phone.name}</h1>
                    <h2>${phone.price}</h2>
                </div>
                <Link to='/' className='btn btn-info btn-block'>Back to store</Link>
                <button
                    type='button'
                    className='btn btn-success btn-block'
                    onClick={() => this.addPhone(phone.id)}
                >
                    Add to cart
                </button>
            </div>
        )
    }

    addPhone(id) {
        this.props.addPhoneToBasket(id)
        const basket = document.querySelector('#cart')
        basket.classList.add('animated')
        basket.addEventListener('animationend', () => {
            basket.classList.remove('animated')
        })
    }

    render() {
        const { phone } = this.props
        return (
            <div className='view-container'>
                <div className='container'>
                    <div className='row'>
                        <div className='col-md-9'>
                            {phone && this.renderContent()}
                        </div>
                        <div className='col-md-3'>
                            {phone && this.renderSidebar()}
                        </div>
                    </div>
                </div>
            </div>
        )
    }
}

const mapStateToProps = state => {
    return {
        phone: getPhoneById(state, state.phonePage.id)
    }
}

const mapDispatchToProps = {
    fetchPhoneById,
    addPhoneToBasket
}

export default connect(mapStateToProps, mapDispatchToProps)(Phone)